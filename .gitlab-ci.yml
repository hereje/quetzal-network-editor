security:
  stage: test
  image:
    name: aquasec/trivy
    entrypoint: ['/usr/bin/env']
  variables:
    TRIVY_NO_PROGRESS: "true"
    TRIVY_EXIT_CODE: 1
    TRIVY_SEVERITY: "HIGH,CRITICAL"
    TRIVY_IGNORE_UNFIXED: "true"
  script:
    - 'trivy fs "$CI_PROJECT_DIR"'
test:
  stage: test
  image:
    name: node:16
  variables:
    YARN_CACHE_FOLDER: "/opt/cache/yarn"
  cache:
    when: always
    key: visator-yarn-cache
    paths:
      - /opt/cache/yarn/
  before_script:
    - 'apt-get update && apt-get install -y gettext libxml2-utils'
    - 'mkdir -p $YARN_CACHE_FOLDER'
    - 'export YARN_CACHE_FOLDER'
    - '[ -d reports ] && rm -rf reports'
    - 'mkdir -p reports'
    - 'cp src/config.js.dist src/config.js'
  script:
    - 'yarn install --ignore-engines'
    - 'yarn run lint || FAILED=1'
    - 'yarn run i18n-extract report --ci || FAILED=1'
    - 'yarn run test --ci || FAILED=1'
    - './show_total_coverage'
    - '[ -z "$FAILED" ]'
  artifacts:
    when: always
    paths:
      - reports/**
    reports:
      junit: reports/report.xunit
      coverage_report:
        coverage_format: cobertura
        path: reports/coverage.xml
  coverage: /^coverage \d+\.\d+$/
